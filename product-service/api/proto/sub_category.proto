syntax = "proto3";

package pos;

option go_package="github.com/Andrewalifb/alpha-pos-system/product-service";

import "google/protobuf/timestamp.proto";
import "alpha-pos-system/product-service/api/proto/common.proto"; 

// PosProductSubCategory
message PosProductSubCategory {
  string sub_category_id = 1;
  string sub_category_name = 2;
  string category_id = 3;
  string company_id = 4;
  google.protobuf.Timestamp created_at = 5;
  string created_by = 6;
  google.protobuf.Timestamp updated_at = 7;
  string updated_by = 8;
}

// Request and Response messages
message CreatePosProductSubCategoryRequest {
  PosProductSubCategory pos_product_sub_category = 1;
  JWTPayload jwt_payload = 2;
}

message CreatePosProductSubCategoryResponse {
  PosProductSubCategory pos_product_sub_category = 1;
}

message ReadPosProductSubCategoryRequest {
  string sub_category_id = 1;
  JWTPayload jwt_payload = 2;
}

message ReadPosProductSubCategoryResponse {
  PosProductSubCategory pos_product_sub_category = 1;
}

message UpdatePosProductSubCategoryRequest {
  PosProductSubCategory pos_product_sub_category = 1;
  JWTPayload jwt_payload = 2;
}

message UpdatePosProductSubCategoryResponse {
  PosProductSubCategory pos_product_sub_category = 1;
}

message DeletePosProductSubCategoryRequest {
  string sub_category_id = 1;
  JWTPayload jwt_payload = 2;
}

message DeletePosProductSubCategoryResponse {
  bool success = 1;
}

message ReadAllPosProductSubCategoriesRequest {
    JWTPayload jwt_payload = 1;
}

message ReadAllPosProductSubCategoriesResponse {
  repeated PosProductSubCategory pos_product_sub_categories = 1;
}

// PosProductSubCategoryService
service PosProductSubCategoryService {
  rpc CreatePosProductSubCategory(CreatePosProductSubCategoryRequest) returns (CreatePosProductSubCategoryResponse);
  rpc ReadPosProductSubCategory(ReadPosProductSubCategoryRequest) returns (ReadPosProductSubCategoryResponse);
  rpc UpdatePosProductSubCategory(UpdatePosProductSubCategoryRequest) returns (UpdatePosProductSubCategoryResponse);
  rpc DeletePosProductSubCategory(DeletePosProductSubCategoryRequest) returns (DeletePosProductSubCategoryResponse);
  rpc ReadAllPosProductSubCategories(ReadAllPosProductSubCategoriesRequest) returns (ReadAllPosProductSubCategoriesResponse);
}
