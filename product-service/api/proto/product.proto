syntax = "proto3";

package pos;

option go_package="github.com/Andrewalifb/alpha-pos-system/product-service";

import "google/protobuf/timestamp.proto";
import "alpha-pos-system/product-service/api/proto/common.proto"; 

// PosProduct
message PosProduct {
  string product_id = 1;
  string product_name = 2;
  double price = 3;
  double cost_price = 4;
  string category_id = 5;
  string sub_category_id = 6;
  int32 stock_quantity = 7;
  int32 reorder_level = 8;
  string supplier_id = 9;
  string product_description = 10;
  bool active = 11;
  string company_id = 12;
  google.protobuf.Timestamp created_at = 13;
  string created_by = 14;
  google.protobuf.Timestamp updated_at = 15;
  string updated_by = 16;
}

// Request and Response messages
message CreatePosProductRequest {
  PosProduct pos_product = 1;
  JWTPayload jwt_payload = 2;
}

message CreatePosProductResponse {
  PosProduct pos_product = 1;
}

message ReadPosProductRequest {
  string product_id = 1;
  JWTPayload jwt_payload = 2;
}

message ReadPosProductResponse {
  PosProduct pos_product = 1;
}

message UpdatePosProductRequest {
  PosProduct pos_product = 1;
  JWTPayload jwt_payload = 2;
}

message UpdatePosProductResponse {
  PosProduct pos_product = 1;
}

message DeletePosProductRequest {
  string product_id = 1;
  JWTPayload jwt_payload = 2;
}

message DeletePosProductResponse {
  bool success = 1;
}

message ReadAllPosProductsRequest {
    JWTPayload jwt_payload = 1;
}

message ReadAllPosProductsResponse {
  repeated PosProduct pos_products = 1;
}

// PosProductService
service PosProductService {
  rpc CreatePosProduct(CreatePosProductRequest) returns (CreatePosProductResponse);
  rpc ReadPosProduct(ReadPosProductRequest) returns (ReadPosProductResponse);
  rpc UpdatePosProduct(UpdatePosProductRequest) returns (UpdatePosProductResponse);
  rpc DeletePosProduct(DeletePosProductRequest) returns (DeletePosProductResponse);
  rpc ReadAllPosProducts(ReadAllPosProductsRequest) returns (ReadAllPosProductsResponse);
}
