// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: customer_loyalty.proto

package loyalty_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PosCustomerLoyaltyServiceClient is the client API for PosCustomerLoyaltyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PosCustomerLoyaltyServiceClient interface {
	CreatePosCustomerLoyalty(ctx context.Context, in *CreatePosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*CreatePosCustomerLoyaltyResponse, error)
	ReadPosCustomerLoyalty(ctx context.Context, in *ReadPosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*ReadPosCustomerLoyaltyResponse, error)
	UpdatePosCustomerLoyalty(ctx context.Context, in *UpdatePosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*UpdatePosCustomerLoyaltyResponse, error)
	DeletePosCustomerLoyalty(ctx context.Context, in *DeletePosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*DeletePosCustomerLoyaltyResponse, error)
	ReadAllPosCustomerLoyalties(ctx context.Context, in *ReadAllPosCustomerLoyaltiesRequest, opts ...grpc.CallOption) (*ReadAllPosCustomerLoyaltiesResponse, error)
}

type posCustomerLoyaltyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPosCustomerLoyaltyServiceClient(cc grpc.ClientConnInterface) PosCustomerLoyaltyServiceClient {
	return &posCustomerLoyaltyServiceClient{cc}
}

func (c *posCustomerLoyaltyServiceClient) CreatePosCustomerLoyalty(ctx context.Context, in *CreatePosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*CreatePosCustomerLoyaltyResponse, error) {
	out := new(CreatePosCustomerLoyaltyResponse)
	err := c.cc.Invoke(ctx, "/pos.PosCustomerLoyaltyService/CreatePosCustomerLoyalty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posCustomerLoyaltyServiceClient) ReadPosCustomerLoyalty(ctx context.Context, in *ReadPosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*ReadPosCustomerLoyaltyResponse, error) {
	out := new(ReadPosCustomerLoyaltyResponse)
	err := c.cc.Invoke(ctx, "/pos.PosCustomerLoyaltyService/ReadPosCustomerLoyalty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posCustomerLoyaltyServiceClient) UpdatePosCustomerLoyalty(ctx context.Context, in *UpdatePosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*UpdatePosCustomerLoyaltyResponse, error) {
	out := new(UpdatePosCustomerLoyaltyResponse)
	err := c.cc.Invoke(ctx, "/pos.PosCustomerLoyaltyService/UpdatePosCustomerLoyalty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posCustomerLoyaltyServiceClient) DeletePosCustomerLoyalty(ctx context.Context, in *DeletePosCustomerLoyaltyRequest, opts ...grpc.CallOption) (*DeletePosCustomerLoyaltyResponse, error) {
	out := new(DeletePosCustomerLoyaltyResponse)
	err := c.cc.Invoke(ctx, "/pos.PosCustomerLoyaltyService/DeletePosCustomerLoyalty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posCustomerLoyaltyServiceClient) ReadAllPosCustomerLoyalties(ctx context.Context, in *ReadAllPosCustomerLoyaltiesRequest, opts ...grpc.CallOption) (*ReadAllPosCustomerLoyaltiesResponse, error) {
	out := new(ReadAllPosCustomerLoyaltiesResponse)
	err := c.cc.Invoke(ctx, "/pos.PosCustomerLoyaltyService/ReadAllPosCustomerLoyalties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PosCustomerLoyaltyServiceServer is the server API for PosCustomerLoyaltyService service.
// All implementations must embed UnimplementedPosCustomerLoyaltyServiceServer
// for forward compatibility
type PosCustomerLoyaltyServiceServer interface {
	CreatePosCustomerLoyalty(context.Context, *CreatePosCustomerLoyaltyRequest) (*CreatePosCustomerLoyaltyResponse, error)
	ReadPosCustomerLoyalty(context.Context, *ReadPosCustomerLoyaltyRequest) (*ReadPosCustomerLoyaltyResponse, error)
	UpdatePosCustomerLoyalty(context.Context, *UpdatePosCustomerLoyaltyRequest) (*UpdatePosCustomerLoyaltyResponse, error)
	DeletePosCustomerLoyalty(context.Context, *DeletePosCustomerLoyaltyRequest) (*DeletePosCustomerLoyaltyResponse, error)
	ReadAllPosCustomerLoyalties(context.Context, *ReadAllPosCustomerLoyaltiesRequest) (*ReadAllPosCustomerLoyaltiesResponse, error)
	mustEmbedUnimplementedPosCustomerLoyaltyServiceServer()
}

// UnimplementedPosCustomerLoyaltyServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPosCustomerLoyaltyServiceServer struct {
}

func (UnimplementedPosCustomerLoyaltyServiceServer) CreatePosCustomerLoyalty(context.Context, *CreatePosCustomerLoyaltyRequest) (*CreatePosCustomerLoyaltyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePosCustomerLoyalty not implemented")
}
func (UnimplementedPosCustomerLoyaltyServiceServer) ReadPosCustomerLoyalty(context.Context, *ReadPosCustomerLoyaltyRequest) (*ReadPosCustomerLoyaltyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPosCustomerLoyalty not implemented")
}
func (UnimplementedPosCustomerLoyaltyServiceServer) UpdatePosCustomerLoyalty(context.Context, *UpdatePosCustomerLoyaltyRequest) (*UpdatePosCustomerLoyaltyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePosCustomerLoyalty not implemented")
}
func (UnimplementedPosCustomerLoyaltyServiceServer) DeletePosCustomerLoyalty(context.Context, *DeletePosCustomerLoyaltyRequest) (*DeletePosCustomerLoyaltyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePosCustomerLoyalty not implemented")
}
func (UnimplementedPosCustomerLoyaltyServiceServer) ReadAllPosCustomerLoyalties(context.Context, *ReadAllPosCustomerLoyaltiesRequest) (*ReadAllPosCustomerLoyaltiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllPosCustomerLoyalties not implemented")
}
func (UnimplementedPosCustomerLoyaltyServiceServer) mustEmbedUnimplementedPosCustomerLoyaltyServiceServer() {
}

// UnsafePosCustomerLoyaltyServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PosCustomerLoyaltyServiceServer will
// result in compilation errors.
type UnsafePosCustomerLoyaltyServiceServer interface {
	mustEmbedUnimplementedPosCustomerLoyaltyServiceServer()
}

func RegisterPosCustomerLoyaltyServiceServer(s grpc.ServiceRegistrar, srv PosCustomerLoyaltyServiceServer) {
	s.RegisterService(&PosCustomerLoyaltyService_ServiceDesc, srv)
}

func _PosCustomerLoyaltyService_CreatePosCustomerLoyalty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePosCustomerLoyaltyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosCustomerLoyaltyServiceServer).CreatePosCustomerLoyalty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosCustomerLoyaltyService/CreatePosCustomerLoyalty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosCustomerLoyaltyServiceServer).CreatePosCustomerLoyalty(ctx, req.(*CreatePosCustomerLoyaltyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosCustomerLoyaltyService_ReadPosCustomerLoyalty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPosCustomerLoyaltyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosCustomerLoyaltyServiceServer).ReadPosCustomerLoyalty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosCustomerLoyaltyService/ReadPosCustomerLoyalty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosCustomerLoyaltyServiceServer).ReadPosCustomerLoyalty(ctx, req.(*ReadPosCustomerLoyaltyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosCustomerLoyaltyService_UpdatePosCustomerLoyalty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePosCustomerLoyaltyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosCustomerLoyaltyServiceServer).UpdatePosCustomerLoyalty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosCustomerLoyaltyService/UpdatePosCustomerLoyalty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosCustomerLoyaltyServiceServer).UpdatePosCustomerLoyalty(ctx, req.(*UpdatePosCustomerLoyaltyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosCustomerLoyaltyService_DeletePosCustomerLoyalty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePosCustomerLoyaltyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosCustomerLoyaltyServiceServer).DeletePosCustomerLoyalty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosCustomerLoyaltyService/DeletePosCustomerLoyalty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosCustomerLoyaltyServiceServer).DeletePosCustomerLoyalty(ctx, req.(*DeletePosCustomerLoyaltyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosCustomerLoyaltyService_ReadAllPosCustomerLoyalties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllPosCustomerLoyaltiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosCustomerLoyaltyServiceServer).ReadAllPosCustomerLoyalties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosCustomerLoyaltyService/ReadAllPosCustomerLoyalties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosCustomerLoyaltyServiceServer).ReadAllPosCustomerLoyalties(ctx, req.(*ReadAllPosCustomerLoyaltiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PosCustomerLoyaltyService_ServiceDesc is the grpc.ServiceDesc for PosCustomerLoyaltyService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PosCustomerLoyaltyService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pos.PosCustomerLoyaltyService",
	HandlerType: (*PosCustomerLoyaltyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePosCustomerLoyalty",
			Handler:    _PosCustomerLoyaltyService_CreatePosCustomerLoyalty_Handler,
		},
		{
			MethodName: "ReadPosCustomerLoyalty",
			Handler:    _PosCustomerLoyaltyService_ReadPosCustomerLoyalty_Handler,
		},
		{
			MethodName: "UpdatePosCustomerLoyalty",
			Handler:    _PosCustomerLoyaltyService_UpdatePosCustomerLoyalty_Handler,
		},
		{
			MethodName: "DeletePosCustomerLoyalty",
			Handler:    _PosCustomerLoyaltyService_DeletePosCustomerLoyalty_Handler,
		},
		{
			MethodName: "ReadAllPosCustomerLoyalties",
			Handler:    _PosCustomerLoyaltyService_ReadAllPosCustomerLoyalties_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer_loyalty.proto",
}
