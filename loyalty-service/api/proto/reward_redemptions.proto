syntax = "proto3";

package pos;

option go_package="github.com/Andrewalifb/alpha-pos-system/loyalty-service";

import "google/protobuf/timestamp.proto";
import "alpha-pos-system/loyalty-service/api/proto/common.proto";

// PosRewardRedemption
message PosRewardRedemption {
  string redemption_id = 1;
  string reward_id = 2;
  string customer_id = 3;
  google.protobuf.Timestamp redemption_date = 4;
  string company_id = 5;
  google.protobuf.Timestamp created_at = 6;
  string created_by = 7;
  google.protobuf.Timestamp updated_at = 8;
  string updated_by = 9;
}

// Request and Response messages for PosRewardRedemption
message CreatePosRewardRedemptionRequest {
  PosRewardRedemption pos_reward_redemption = 1;
  JWTPayload jwt_payload = 2;
}

message CreatePosRewardRedemptionResponse {
  PosRewardRedemption pos_reward_redemption = 1;
}

message ReadPosRewardRedemptionRequest {
  string redemption_id = 1;
  JWTPayload jwt_payload = 2;
}

message ReadPosRewardRedemptionResponse {
  PosRewardRedemption pos_reward_redemption = 1;
}

message UpdatePosRewardRedemptionRequest {
  PosRewardRedemption pos_reward_redemption = 1;
  JWTPayload jwt_payload = 2;
}

message UpdatePosRewardRedemptionResponse {
  PosRewardRedemption pos_reward_redemption = 1;
}

message DeletePosRewardRedemptionRequest {
  string redemption_id = 1;
  JWTPayload jwt_payload = 2;
}

message DeletePosRewardRedemptionResponse {
  bool success = 1;
}

message ReadAllPosRewardRedemptionsRequest {
  JWTPayload jwt_payload = 1;
}

message ReadAllPosRewardRedemptionsResponse {
  repeated PosRewardRedemption pos_reward_redemptions = 1;
}

// PosRewardRedemptionService
service PosRewardRedemptionService {
  rpc CreatePosRewardRedemption(CreatePosRewardRedemptionRequest) returns (CreatePosRewardRedemptionResponse);
  rpc ReadPosRewardRedemption(ReadPosRewardRedemptionRequest) returns (ReadPosRewardRedemptionResponse);
  rpc UpdatePosRewardRedemption(UpdatePosRewardRedemptionRequest) returns (UpdatePosRewardRedemptionResponse);
  rpc DeletePosRewardRedemption(DeletePosRewardRedemptionRequest) returns (DeletePosRewardRedemptionResponse);
  rpc ReadAllPosRewardRedemptions(ReadAllPosRewardRedemptionsRequest) returns (ReadAllPosRewardRedemptionsResponse);
}
